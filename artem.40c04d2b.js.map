{"mappings":"AAoBA,IAAMA,KAAOC,SAASC,cAAc,cAC9BC,KAAOF,SAASC,cAAc,SAE9BE,SAAW,6CACXC,QAAU,kCAIhB,SAASC,SAASC,GACdA,EAAIC,iBAEJ,IAOIC,EAAAF,EAAIG,cAAcC,SALdC,EAKJH,EANAI,MACIC,MAGAC,EAEJN,EAHAO,KACIF,MAIHF,EAKLK,YAAYL,EAAaG,GAAWG,MAAK,SAAAC,G,OAAQC,YAAYD,EAAKE,SAASC,Y,IAJvEC,MAAM,gB,CASd,SAASH,YAAYI,GACjB,IAAMC,EAASD,EAAIE,KAAI,SAAAC,G,MAAQ,uBAEvBC,OADID,EAAKE,IAAIC,UAAUC,KAAK,yBAExBH,OADJD,EAAKE,IAAIC,UAAUE,KAAK,2BAETJ,OADPD,EAAKM,KAAK,gCACuBL,OAAnBD,EAAKE,IAAIK,UAAU,sB,IAC7CC,KAAK,IACThC,KAAKiC,UAAYX,C,CAOrB,SAASR,c,IAAYoB,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAaA,UAAA,GAAN,OAAQxB,EAAAwB,UAAAC,OAAA,YAAAD,UAAA,GAASA,UAAA,GAAD,EACxC,OAAOE,MAAM,GAAmBZ,OAAhBxB,SAAS,SAAoBwB,OAAbvB,QAAQ,OAAkBuB,OAAbS,EAAK,UAAcT,OAANd,IAASI,MAAK,SAAAuB,GAEhE,GADAC,QAAQC,IAAIF,IACPA,EAAKG,GACN,MAAM,IAAIC,MAAMJ,EAAKK,YAEzB,OAAOL,EAAKM,M,IAEfC,OAAM,SAAAC,G,OAAOP,QAAQQ,MAAMD,E,IA9CpCjD,KAAKmD,iBAAiB,SAAU7C,UAyG1BH,KAAOF,SAASC,cAAc,SAApC,IACMkD,MAAQnD,SAASC,cAAc,aAC/BmD,QAAU,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,GAEXC,KAAO,EACLC,SAAW,IAAIC,qBAAqBC,OAAQP,SAGlD,SAASO,OAAOC,EAASC,GACrBD,EAAQE,SAAQ,SAAAC,GACRA,EAAMC,gBAENC,SADAT,MAAQ,GACOvC,MAAK,SAAAC,GACZhB,KAAKgE,mBAAmB,YAAaC,aAAajD,EAAKkD,OACnDlD,EAAKsC,OAAStC,EAAKmD,OACnBR,EAASS,UAAUnB,M,OAMvCV,QAAQC,IAAIkB,E,CAShB,SAASK,W,IAASM,EAAAlC,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EACfmC,EAAU,CACZC,QAAS,CACLC,cAAe,gCAGjBC,EAAW,uCACjB,OAAOpC,MAAM,GAA8BZ,OAA3BgD,EAAS,oBAAuBhD,OAAL4C,GAAQC,GAASvD,MAAK,SAAAuB,GAC7D,IAAKA,EAAKG,GACN,MAAM,IAAIC,MAEd,OAAOJ,EAAKM,M,IAIpB,SAASqB,aAAa5C,GAClB,OAAOA,EAAIE,KAAI,SAAAmD,G,IACXxC,EAAIwC,EAAJxC,KACAyC,EAAID,EAAJC,K,MACE,iBAEElD,OADFS,EAAK,qBACET,OAALkD,EAAK,qB,IACL3C,KAAK,G,CA9CjBuB,SAASqB,QAAQ3B","sources":["src/artem.js"],"sourcesContent":["//  HTTP 1.1 vs HTTP 2.0\n// https://www.google.com/imgres?imgurl=https%3A%2F%2Fcascadingmedia.com%2Fassets%2Fimages%2Finsites%2F2015%2F03%2Fhttp2%2Fhttp1-vs-http2-09a032a2.png&imgrefurl=https%3A%2F%2Fcascadingmedia.com%2Finsites%2F2015%2F03%2Fhttp-2.html&tbnid=Hm1Hfs4eiLceuM&vet=12ahUKEwjaoebXpbj7AhUHqYsKHWPpAVwQMygGegUIARC4AQ..i&docid=4EvuPcopD1HKDM&w=1602&h=1588&q=http%201%20vs%20http%202&ved=2ahUKEwjaoebXpbj7AhUHqYsKHWPpAVwQMygGegUIARC4AQ\n\n// alt + z\n\n// POSTMAN\n// https://www.postman.com/downloads/\n\n// API –¥–ª—è —É—Ä–æ–∫–∏\n// https://www.weatherapi.com/\n// API_KEY 6d9e1f9bc39549bdb1b181332221811\n\n\n// XMLHttpRequest\n// https://developer.mozilla.org/ru/docs/Web/API/XMLHttpRequest\n\n\n// –¢–∏–ø–∏ –°—Ç–∞—Ç—É—Å—ñ–≤ \n// https://uk.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BA%D0%BE%D0%B4%D1%96%D0%B2_%D1%81%D1%82%D0%B0%D0%BD%D1%83_HTTP\n\nconst form = document.querySelector('.js-search');\nconst list = document.querySelector('.list');\n\nconst BASE_URL = 'http://api.weatherapi.com/v1/forecast.json';\nconst API_KEY = '6d9e1f9bc39549bdb1b181332221811';\n\nform.addEventListener('submit', onSearch);\n\nfunction onSearch(evt) {\n    evt.preventDefault()\n\n    const {\n        query: {\n            value: searchValue\n        },\n        days: {\n            value: daysValue\n        }\n    } = evt.currentTarget.elements;\n\n    if (!searchValue) {\n        alert('–ü–æ–ª–µ –ø—É—Å—Ç–µ üò¢');\n        return;\n    }\n\n    forecastApi(searchValue, daysValue).then(data => creatMarkup(data.forecast.forecastday));\n}\n\n\n\nfunction creatMarkup(arr) {\n    const markup = arr.map(item => `<li>\n    <img src=\"${item.day.condition.icon}\" alt=\"\">\n    <span>${item.day.condition.text}</span>\n    <h2>–î–µ–Ω—å: ${item.date}</h2>\n    <h3>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${item.day.avgtemp_c}&#8451;</h3>\n</li>`).join('');\n    list.innerHTML = markup;\n}\n\n\n\n\n\nfunction forecastApi(name = \"Kiev\", value = 7) {\n    return fetch(`${BASE_URL}?key=${API_KEY}&q=${name}&days=${value}`).then(resp => {\n            console.log(resp);\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            }\n            return resp.json()\n        })\n        .catch(err => console.error(err));\n}\n\n\n// –ü–ï–†–ï–†–í–ê –î–û 21.00\n\n\n// https://the-one-api.dev/documentation\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n// XJlq9OFMcHAy8pAQK7xj\n// const list = document.querySelector('.list')\n// const load = document.querySelector('.load')\n// let page = 1;\n// load.addEventListener('click', onLoad)\n\n// function ringsApi(page = 1) {\n//     const options = {\n//         headers: {\n//             Authorization: 'Bearer XJlq9OFMcHAy8pAQK7xj'\n//         }\n//     }\n//     const BASE_URL = 'https://the-one-api.dev/v2/character'\n//     return fetch(`${BASE_URL}?limit=300&page=${page}`, options).then(resp => {\n//         if (!resp.ok) {\n//             throw new Error()\n//         }\n//         return resp.json()\n//     })\n// }\n\n// ringsApi().then(data => {\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.docs))\n// }).catch(err => console.log(err))\n\n\n\n// function createMarkup(arr) {\n//     return arr.map(({\n//         name,\n//         race\n//     }) => `<li>\n//     <h2>${name}</h2>\n//     <span>${race}</span>\n//     </li>`).join('')\n// }\n\n\n\n// function onLoad() {\n//     page += 1;\n//     ringsApi(page).then(data => {\n//         list.insertAdjacentHTML('beforeend', createMarkup(data.docs));\n//         if (data.page === data.pages) {\n//             load.setAttribute('hidden', true)\n//         }\n//     }).catch(err => console.log(err))\n// }\n\n\nconst list = document.querySelector('.list');\nconst guard = document.querySelector('.js-guard');\nconst options = {\n    root: null,\n    rootMargin: '300px',\n    threshold: 1.0\n}\nlet page = 0;\nconst observer = new IntersectionObserver(onLoad, options);\nobserver.observe(guard)\n\nfunction onLoad(entries, observer) {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            page += 1;\n            ringsApi(page).then(data => {\n                    list.insertAdjacentHTML('beforeend', createMarkup(data.docs))\n                    if (data.page === data.pages) {\n                        observer.unobserve(guard)\n                    }\n                })\n                // console.log('–ë–∞—á—É üòé');\n        }\n    })\n    console.log(entries);\n}\n// let counter = 0\n// document.addEventListener('scroll',()=>{\n// counter+=1\n// console.log('counter',counter);\n// })\n\n\nfunction ringsApi(page = 1) {\n    const options = {\n        headers: {\n            Authorization: 'Bearer XJlq9OFMcHAy8pAQK7xj'\n        }\n    }\n    const BASE_URL = 'https://the-one-api.dev/v2/character'\n    return fetch(`${BASE_URL}?limit=300&page=${page}`, options).then(resp => {\n        if (!resp.ok) {\n            throw new Error()\n        }\n        return resp.json()\n    })\n}\n\nfunction createMarkup(arr) {\n    return arr.map(({\n        name,\n        race\n    }) => `<li>\n    <h2>${name}</h2>\n    <span>${race}</span>\n    </li>`).join('')\n}\n\n\n// ringsApi().then(data => {\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.docs))\n\n// }).catch(err => console.log(err))"],"names":["form","document","querySelector","list","BASE_URL","API_KEY","onSearch","evt","preventDefault","_elements","currentTarget","elements","searchValue","query","value","daysValue","days","forecastApi","then","data","creatMarkup","forecast","forecastday","alert","arr","markup","map","item","concat","day","condition","icon","text","date","avgtemp_c","join","innerHTML","name","arguments","length","fetch","resp","console","log","ok","Error","statusText","json","catch","err","error","addEventListener","guard","options","root","rootMargin","threshold","page","observer","IntersectionObserver","onLoad","entries","observer1","forEach","entry","isIntersecting","ringsApi","insertAdjacentHTML","createMarkup","docs","pages","unobserve","page1","options1","headers","Authorization","BASE_URL1","param","race","observe"],"version":3,"file":"artem.40c04d2b.js.map"}